{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/ui_elements/logo/index.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  color: \", \";\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  // color: \", \";\\n  color: \", \";\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  display: inline-block;\\n  font-weight: 600;\\n  font-size: \", \";\\n  font-weight: 600;\\n  letter-spacing: \", \";\\n  text-decoration: none;\\n  width: auto;\\n  \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { ThemeContext } from '../../get-in-touch';\nimport { black, red, white } from '../../styles/colors';\nimport pxToRem from '../../utils/px_to_rem';\nimport { transitionPt1 } from '../../utils/transitions';\nconst name = 'DallasGale';\nconst dev = 'dev';\nconst StyledLogo = styled(Link)(_templateObject(), pxToRem(20), pxToRem(-1), transitionPt1);\nconst Name = styled.span(_templateObject2(), props => props.theme === 'dark' ? white : black, white);\nconst Ext = styled.span(_templateObject3(), red);\n\nconst Logo = () => {\n  const context = useContext(ThemeContext);\n  return React.createElement(StyledLogo, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Name, {\n    theme: context,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, name, \".\"), React.createElement(Ext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, dev));\n};\n\nexport default Logo;","map":{"version":3,"sources":["/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/ui_elements/logo/index.jsx"],"names":["React","useContext","Link","styled","ThemeContext","black","red","white","pxToRem","transitionPt1","name","dev","StyledLogo","Name","span","props","theme","Ext","Logo","context"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,YAAT,QAA6B,oBAA7B;AAEA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,KAArB,QAAkC,qBAAlC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,MAAMC,IAAI,GAAG,YAAb;AACA,MAAMC,GAAG,GAAG,KAAZ;AAEA,MAAMC,UAAU,GAAGT,MAAM,CAACD,IAAD,CAAT,oBAIDM,OAAO,CAAC,EAAD,CAJN,EAMIA,OAAO,CAAC,CAAC,CAAF,CANX,EASZC,aATY,CAAhB;AAYA,MAAMI,IAAI,GAAGV,MAAM,CAACW,IAAV,qBAEIC,KAAK,IAAKA,KAAK,CAACC,KAAN,KAAgB,MAAhB,GAAyBT,KAAzB,GAAiCF,KAF/C,EAGCE,KAHD,CAAV;AAMA,MAAMU,GAAG,GAAGd,MAAM,CAACW,IAAV,qBAEER,GAFF,CAAT;;AAKA,MAAMY,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAGlB,UAAU,CAACG,YAAD,CAA1B;AACA,SACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,IADH,MADF,EAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,GAAN,CALF,CADF;AASD,CAXD;;AAaA,eAAeO,IAAf","sourcesContent":["import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport styled from 'styled-components'\n\nimport { ThemeContext } from '../../get-in-touch'\n\nimport { black, red, white } from '../../styles/colors'\nimport pxToRem from '../../utils/px_to_rem'\nimport { transitionPt1 } from '../../utils/transitions'\n\nconst name = 'DallasGale'\nconst dev = 'dev'\n\nconst StyledLogo = styled(Link)`\n\n  display: inline-block;\n  font-weight: 600;\n  font-size: ${pxToRem(20)};\n  font-weight: 600;\n  letter-spacing: ${pxToRem(-1)};\n  text-decoration: none;\n  width: auto;\n  ${transitionPt1};\n`\n\nconst Name = styled.span`\n\n  // color: ${props => (props.theme === 'dark' ? white : black)};\n  color: ${white};\n`\n\nconst Ext = styled.span`\n\n  color: ${red};\n`\n\nconst Logo = () => {\n  const context = useContext(ThemeContext)\n  return (\n    <StyledLogo to=\"/\">\n      <Name theme={context}>\n        {name}\n        .\n      </Name>\n      <Ext>{dev}</Ext>\n    </StyledLogo>\n  )\n}\n\nexport default Logo\n"]},"metadata":{},"sourceType":"module"}