{"ast":null,"code":"import _slicedToArray from \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/skills-tech/tech/index.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  background: \", \";\\n  min-height: \", \";\\n  height: auto;\\n  display: grid;\\n  align-items: center;\\n  color: \", \";\\n  font-size: \", \";\\n  font-weight: 400;\\n  line-height: \", \";\\n  opacity: \", \";\\n  position: fixed;\\n  transition: all  ease 0.3s;\\n  padding: 0 \", \";\\n  top: \", \";\\n  left: \", \";\\n  \\n  @media \", \" {\\n    font-size: \", \";\\n    min-height: \", \";\\n  }\\n\\n  @media \", \" {\\n    width: 100%;\\n    top: 0;\\n    left: 0;\\n    font-size: \", \";\\n    position: relative;\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  background: \", \";\\n  border: none;\\n  max-height: \", \";\\n  max-width: \", \";\\n  \", \";\\n\\n  &:focus {\\n    outline-color: $red;\\n  }\\n\\n  @media \", \" {\\n    max-height: \", \";\\n    max-width: \", \";\\n  }\\n\\n\\n  img {\\n    width: 100%;\\n    margin-bottom: 0;\\n    padding: \", \";\\n    \", \";\\n  }\\n\\n  @media \", \" {\\n    max-height: \", \";\\n    max-width: \", \";\\n\\n    img {\\n      padding: \", \";\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  display: grid;\\n  align-items: center;\\n  justify-items: center;\\n  grid-gap: \", \";\\n  grid-template-columns: repeat(10, 1fr);\\n  margin-bottom: \", \";\\n\\n  @media \", \" {\\n    grid-template-columns: repeat(8, 1fr);\\n  }\\n\\n  @media \", \" {\\n    grid-template-columns: repeat(7, 1fr);\\n  }\\n\\n  @media \", \" {\\n    grid-template-columns: repeat(5, 1fr);\\n    grid-gap: 1px;\\n    margin-bottom: \", \";\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { black, white, red } from '../../styles/colors';\nimport { transitionPt1, transitionPt2 } from '../../utils/transitions';\nimport pxToRem from '../../utils/px_to_rem';\nimport { ScreenWidescreenDown, ScreenDesktopDown, ScreenTabletDown, ScreenPhoneDown } from '../../utils/media';\nimport * as data from './data';\nconst largeIcon = 84;\nconst mediumIcon = 60;\nconst StyledIconGrid = styled.div(_templateObject(), pxToRem(10), pxToRem(50), ScreenWidescreenDown, ScreenDesktopDown, ScreenTabletDown, pxToRem(10));\nconst StyledIconBox = styled.button(_templateObject2(), white, pxToRem(largeIcon), pxToRem(largeIcon), transitionPt1, ScreenWidescreenDown, pxToRem(largeIcon), pxToRem(largeIcon), pxToRem(15), transitionPt2, ScreenWidescreenDown, pxToRem(mediumIcon), pxToRem(mediumIcon), pxToRem(5));\nconst StyledTechName = styled.h4(_templateObject3(), red, pxToRem(50), white, pxToRem(20), pxToRem(20), props => props.hovered ? 1 : 0, pxToRem(20), pxToRem(100), pxToRem(20), ScreenDesktopDown, pxToRem(16), pxToRem(30), ScreenPhoneDown, pxToRem(15));\n\nconst Tech = () => {\n  const _useState = useState(' '),\n        _useState2 = _slicedToArray(_useState, 2),\n        techName = _useState2[0],\n        setTechName = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isHovered = _useState4[0],\n        setIsHovered = _useState4[1];\n\n  const handleDisplayDetails = e => {\n    setTimeout(() => {\n      setTechName(e.description);\n      setIsHovered(true);\n    }, 0);\n    return null;\n  };\n\n  const handleHideDetails = () => {\n    setTimeout(() => {\n      setIsHovered(false);\n      setTechName(null);\n    }, 0);\n    return null;\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(StyledIconGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, data.techIcons.map(tech => React.createElement(StyledIconBox, {\n    key: tech.name,\n    onMouseEnter: () => handleDisplayDetails(tech),\n    onMouseLeave: () => handleHideDetails(),\n    onFocus: () => handleDisplayDetails(tech),\n    onBlur: () => handleDisplayDetails(tech),\n    onClick: () => handleDisplayDetails(tech),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: tech.src,\n    alt: tech.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  })))), React.createElement(StyledTechName, {\n    hovered: isHovered,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, techName));\n};\n\nexport default Tech;","map":{"version":3,"sources":["/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/skills-tech/tech/index.jsx"],"names":["React","useState","styled","black","white","red","transitionPt1","transitionPt2","pxToRem","ScreenWidescreenDown","ScreenDesktopDown","ScreenTabletDown","ScreenPhoneDown","data","largeIcon","mediumIcon","StyledIconGrid","div","StyledIconBox","button","StyledTechName","h4","props","hovered","Tech","techName","setTechName","isHovered","setIsHovered","handleDisplayDetails","e","setTimeout","description","handleHideDetails","techIcons","map","tech","name","src"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { black, white, red } from '../../styles/colors'\nimport { transitionPt1, transitionPt2 } from '../../utils/transitions'\nimport pxToRem from '../../utils/px_to_rem'\nimport {\n  ScreenWidescreenDown,\n  ScreenDesktopDown,\n  ScreenTabletDown,\n  ScreenPhoneDown,\n} from '../../utils/media'\n\n\nimport * as data from './data'\n\nconst largeIcon = 84\nconst mediumIcon = 60\n\nconst StyledIconGrid = styled.div`\n\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  grid-gap: ${pxToRem(10)};\n  grid-template-columns: repeat(10, 1fr);\n  margin-bottom: ${pxToRem(50)};\n\n  @media ${ScreenWidescreenDown} {\n    grid-template-columns: repeat(8, 1fr);\n  }\n\n  @media ${ScreenDesktopDown} {\n    grid-template-columns: repeat(7, 1fr);\n  }\n\n  @media ${ScreenTabletDown} {\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 1px;\n    margin-bottom: ${pxToRem(10)};\n  }\n`\n\nconst StyledIconBox = styled.button`\n\n  background: ${white};\n  border: none;\n  max-height: ${pxToRem(largeIcon)};\n  max-width: ${pxToRem(largeIcon)};\n  ${transitionPt1};\n\n  &:focus {\n    outline-color: $red;\n  }\n\n  @media ${ScreenWidescreenDown} {\n    max-height: ${pxToRem(largeIcon)};\n    max-width: ${pxToRem(largeIcon)};\n  }\n\n\n  img {\n    width: 100%;\n    margin-bottom: 0;\n    padding: ${pxToRem(15)};\n    ${transitionPt2};\n  }\n\n  @media ${ScreenWidescreenDown} {\n    max-height: ${pxToRem(mediumIcon)};\n    max-width: ${pxToRem(mediumIcon)};\n\n    img {\n      padding: ${pxToRem(5)};\n    }\n  }\n`\n\nconst StyledTechName = styled.h4`\n\n  background: ${red};\n  min-height: ${pxToRem(50)};\n  height: auto;\n  display: grid;\n  align-items: center;\n  color: ${white};\n  font-size: ${pxToRem(20)};\n  font-weight: 400;\n  line-height: ${pxToRem(20)};\n  opacity: ${props => (props.hovered ? 1 : 0)};\n  position: fixed;\n  transition: all  ease 0.3s;\n  padding: 0 ${pxToRem(20)};\n  top: ${pxToRem(100)};\n  left: ${pxToRem(20)};\n  \n  @media ${ScreenDesktopDown} {\n    font-size: ${pxToRem(16)};\n    min-height: ${pxToRem(30)};\n  }\n\n  @media ${ScreenPhoneDown} {\n    width: 100%;\n    top: 0;\n    left: 0;\n    font-size: ${pxToRem(15)};\n    position: relative;\n  }\n`\n\nconst Tech = () => {\n  const [techName, setTechName] = useState(' ')\n  const [isHovered, setIsHovered] = useState(false)\n\n  const handleDisplayDetails = (e) => {\n    setTimeout(() => {\n      setTechName(e.description)\n      setIsHovered(true)\n    }, 0)\n    return null\n  }\n\n  const handleHideDetails = () => {\n    setTimeout(() => {\n      setIsHovered(false)\n      setTechName(null)\n    }, 0)\n    return null\n  }\n\n  return (\n    <>\n      <StyledIconGrid>\n        {\n          data.techIcons.map(tech => (\n            <StyledIconBox\n              key={tech.name}\n              onMouseEnter={() => handleDisplayDetails(tech)}\n              onMouseLeave={() => handleHideDetails()}\n              onFocus={() => handleDisplayDetails(tech)}\n              onBlur={() => handleDisplayDetails(tech)}\n              onClick={() => handleDisplayDetails(tech)}\n            >\n              <img src={tech.src} alt={tech.name} />\n            </StyledIconBox>\n          ))\n        }\n      </StyledIconGrid>\n      <StyledTechName hovered={isHovered}>{techName}</StyledTechName>\n    </>\n  )\n}\n\nexport default Tech\n"]},"metadata":{},"sourceType":"module"}