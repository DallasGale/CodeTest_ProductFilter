{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/get-in-touch/index.jsx\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  color: \", \";\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  display: grid;\\n  align-items: center;\\n  grid-gap: 5%;\\n  justify-items: start;\\n  grid-template-columns: 10% 85%;\\n\\n  img {\\n    max-width: \", \";\\n    padding-bottom: \", \";\\n    padding-top: \", \";\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  font-weight: 600;\\n  font-size: \", \";\\n\\n  @media \", \" {\\n    font-size: \", \";\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  color: \", \";\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n\\n  color: \", \";\\n  max-width: \", \";\\n  min-height: 100vh;\\n  margin: 0 auto;\\n  margin-top: 5%;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Header from '../ui_elements/header';\nimport Page from '../styled/page';\nimport { PageTitle } from '../styled/typography';\nimport Form from './form';\nimport pxToRem from '../utils/px_to_rem';\nimport { ScreenWidescreenDown } from '../utils/media';\nimport { white } from '../styles/colors';\nimport GitHubIcon from '../../images/icons/github_white.png';\nimport LinkedInIcon from '../../images/icons/linkedin.png';\nimport TwitterIcon from '../../images/icons/twitter.png';\nconst pageName = 'Get In Touch.';\nconst StyledContent = styled.div(_templateObject(), white, pxToRem(400));\nconst StyledTitle = styled(PageTitle)(_templateObject2(), white);\nconst StyledH2 = styled.h2(_templateObject3(), pxToRem(25), ScreenWidescreenDown, pxToRem(20));\nconst StyledChannelGrid = styled.div(_templateObject4(), pxToRem(30), pxToRem(10), pxToRem(10));\nconst StyledLink = styled.a(_templateObject5(), white);\nexport const ThemeContext = React.createContext('default');\n\nconst Channel = props => {\n  const url = props.url,\n        src = props.src,\n        alt = props.alt,\n        label = props.label;\n  return React.createElement(StyledChannelGrid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"spacing__margin-btm--none\",\n    src: src,\n    alt: alt,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(StyledLink, {\n    href: url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, label)));\n};\n\nconst GetInTouch = () => React.createElement(ThemeContext.Provider, {\n  value: \"dark\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, React.createElement(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), React.createElement(StyledTitle, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, pageName), React.createElement(Page, {\n  fullWidth: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, React.createElement(StyledContent, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n}, React.createElement(StyledH2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}, \"Send me a message\"), React.createElement(Form, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), React.createElement(StyledH2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, \"Connect through a channel\"), React.createElement(Channel, {\n  url: \"http://www.github.com/DallasGale\",\n  label: \"github.com/DallasGale\",\n  alt: \"Gitub repositories and code samples\",\n  src: GitHubIcon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}), React.createElement(Channel, {\n  url: \"http://www.linkedin.com/in/dallas-gale\",\n  label: \"linkedin.com/in/dallas-gale\",\n  alt: \"LinkedIn profile\",\n  src: LinkedInIcon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}), React.createElement(Channel, {\n  url: \"http://www.twitter.com/dallascgale\",\n  label: \"twitter.com/dallascgale\",\n  alt: \"Twitter account\",\n  src: TwitterIcon,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}))));\n\nexport default GetInTouch;","map":{"version":3,"sources":["/Users/dallasgale/Sites/AKQA/CodeTest_ProductFilter/src/components/get-in-touch/index.jsx"],"names":["React","styled","Header","Page","PageTitle","Form","pxToRem","ScreenWidescreenDown","white","GitHubIcon","LinkedInIcon","TwitterIcon","pageName","StyledContent","div","StyledTitle","StyledH2","h2","StyledChannelGrid","StyledLink","a","ThemeContext","createContext","Channel","props","url","src","alt","label","GetInTouch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nimport Header from '../ui_elements/header'\nimport Page from '../styled/page'\nimport { PageTitle } from '../styled/typography'\nimport Form from './form'\n\nimport pxToRem from '../utils/px_to_rem'\n\nimport { ScreenWidescreenDown } from '../utils/media'\n\nimport { white } from '../styles/colors'\n\nimport GitHubIcon from '../../images/icons/github_white.png'\nimport LinkedInIcon from '../../images/icons/linkedin.png'\nimport TwitterIcon from '../../images/icons/twitter.png'\n\nconst pageName = 'Get In Touch.'\n\nconst StyledContent = styled.div`\n\n  color: ${white};\n  max-width: ${pxToRem(400)};\n  min-height: 100vh;\n  margin: 0 auto;\n  margin-top: 5%;\n`\n\nconst StyledTitle = styled(PageTitle)`\n\n  color: ${white};\n`\n\nconst StyledH2 = styled.h2`\n\n  font-weight: 600;\n  font-size: ${pxToRem(25)};\n\n  @media ${ScreenWidescreenDown} {\n    font-size: ${pxToRem(20)};\n  }\n`\n\nconst StyledChannelGrid = styled.div`\n\n  display: grid;\n  align-items: center;\n  grid-gap: 5%;\n  justify-items: start;\n  grid-template-columns: 10% 85%;\n\n  img {\n    max-width: ${pxToRem(30)};\n    padding-bottom: ${pxToRem(10)};\n    padding-top: ${pxToRem(10)};\n  }\n`\n\nconst StyledLink = styled.a`\n\n  color: ${white};\n`\n\nexport const ThemeContext = React.createContext('default')\n\nconst Channel = (props) => {\n  const {\n    url,\n    src,\n    alt,\n    label,\n  } = props\n\n  return (\n    <StyledChannelGrid>\n      <div>\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          <img className=\"spacing__margin-btm--none\" src={src} alt={alt} />\n        </a>\n      </div>\n      <div>\n        <StyledLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {label}\n        </StyledLink>\n      </div>\n    </StyledChannelGrid>\n  )\n}\n\nconst GetInTouch = () => (\n  <ThemeContext.Provider value=\"dark\">\n    <Header />\n    <StyledTitle>{pageName}</StyledTitle>\n    <Page fullWidth>\n      <StyledContent>\n        <StyledH2>Send me a message</StyledH2>\n        <Form />\n        <StyledH2>Connect through a channel</StyledH2>\n        <Channel url=\"http://www.github.com/DallasGale\" label=\"github.com/DallasGale\" alt=\"Gitub repositories and code samples\" src={GitHubIcon} />\n        <Channel url=\"http://www.linkedin.com/in/dallas-gale\" label=\"linkedin.com/in/dallas-gale\" alt=\"LinkedIn profile\" src={LinkedInIcon} />\n        <Channel url=\"http://www.twitter.com/dallascgale\" label=\"twitter.com/dallascgale\" alt=\"Twitter account\" src={TwitterIcon} />\n      </StyledContent>\n    </Page>\n  </ThemeContext.Provider>\n)\n\nexport default GetInTouch\n"]},"metadata":{},"sourceType":"module"}