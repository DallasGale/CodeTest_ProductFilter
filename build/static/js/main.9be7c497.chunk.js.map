{"version":3,"sources":["components/filter/index.jsx","components/utils/px_to_rem.js","components/styles/fonts.js","components/styled/typography.jsx","components/constants.js","components/product_thumbnail/index.jsx","components/banner/index.jsx","components/styles/colors.js","components/product_tile/index.jsx","components/utils/transitions.js","components/utils/media.jsx","components/products/index.jsx","components/styled/content_wrapper.jsx","components/ui_elements/page.jsx","App.js","serviceWorker.js","index.js"],"names":["Filter","props","filters","label","onChange","value","react_default","a","createElement","aria-label","map","filter","key","defaultProps","pxToRem","concat","pxValue","parseFloat","toFixed","TypographyHeadingOne","styled","h1","_templateObject","TypographyHeadingTwo","h2","_templateObject2","TypographyHeadingThree","h3","_templateObject3","productSizeFilterLabel","productSizes","Image","img","product_thumbnail_templateObject","ProductThumbnail","src","alt","StyledBanner","div","banner_templateObject","StyledExclusive","banner_templateObject2","StyledSale","banner_templateObject3","ExclusiveBanner","SaleBanner","Banner","isExclusive","isSale","banner_ExclusiveBanner","banner_SaleBanner","StyledBannerRow","product_tile_templateObject","StyledDetailsRow","product_tile_templateObject2","StyledTile","article","product_tile_templateObject3","visible","StyledPrice","_templateObject4","ProductTile","_useState","useState","_useState2","Object","slicedToArray","setVisibile","useEffect","image","name","price","product_thumbnail","banner","pageLoadContentAppear","keyframes","transitions_templateObject","onlyScreen","transitions_templateObject2","breakpoints","ScreenTabletDown","ScreenPhoneDown","ScreenSmallDeviceDown","ScreenTabletLandscapeDown","StyledTopBar","products_templateObject","StyledTopBarFilter","products_templateObject2","StyledProductGrid","products_templateObject3","Products","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFilterChange","e","allProducts","state","target","filteredList","item","size","includes","setState","filteredProducts","filteredValue","_this2","axios","get","then","response","data","_this$state","components_filter","product","productImage","productName","console","log","product_tile","React","Component","StyledContent","content_wrapper_templateObject","ContentWrapper","children","StyledPage","main","page_templateObject","Page","mounting","setMounting","isMounting","content_wrapper","App","page","products","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9be7c497.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n// Re-usable filter component\n\nconst Filter = (props) => {\n  const {\n    filters,\n    label,\n    onChange,\n    value,\n  } = props\n  return (\n    <form>\n      <label aria-label={label}>\n        <select value={value} onChange={onChange}>\n          <option value={label}>{label}</option>\n          {\n            filters.map(filter => <option key={filter} value={filter}>{filter}</option>)\n          }\n        </select>\n      </label>\n    </form>\n  )\n}\n\nFilter.propTypes = {\n  filters: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n}\n\nFilter.defaultProps = {\n  label: null,\n}\n\nexport default Filter\n","import { rootFontSize } from '../styles/fonts'\n\n/**\n * Convert a raw px number to its value in rem, represented as a string.\n * ex: pxToRem(10) = '.71428rem'\n */\nconst pxToRem = pxValue => `${parseFloat((pxValue / rootFontSize).toFixed(5))}rem`\n\nexport default pxToRem\n","import { black } from './colors'\n\nconst baseFontColor = black\nconst baseFontFamily = \"'neuzeit-grotesk', 'helvetics', 'arial', sans-serif\"\nconst rootFontSize = 14\nconst rootFontSizePx = `${rootFontSize}px`\n\nexport {\n  baseFontColor,\n  baseFontFamily,\n  rootFontSize,\n  rootFontSizePx,\n}\n","import styled from 'styled-components'\n\nimport pxToRem from '../utils/px_to_rem'\n\nexport const TypographyHeadingOne = styled.h1`\n  font-size: ${pxToRem(18)};\n  margin-bottom: 0;\n`\n\nexport const TypographyHeadingTwo = styled.h2`\n  font-size: ${pxToRem(12)};\n  line-height: ${pxToRem(14)};\n`\n\nexport const TypographyHeadingThree = styled.h3`\n  font-size: ${pxToRem(18)}; \n`\n","// Product Filters\nexport const productSizeFilterLabel = 'Filter by size'\nexport const productSizes = ['XS', 'S', 'M', 'L', 'XL']\n\n// Products\nexport const productApi = 'https://api.jsonbin.io/b/5cae9a54fb42337645ebcad3'\nexport const productImagePlaceholder = 'https://unsplash.com/photos/5WthPh93qws'\n\n// Banners\nexport const exclusiveLabel = 'Exclusive'\nexport const saleLabel = 'Sale'\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport pxToRem from '../utils/px_to_rem'\n\nconst Image = styled.img`\n  display: block;\n  width: 80%;\n  margin: 0 auto;\n  margin-bottom: ${pxToRem(40)};\n`\n\nconst ProductThumbnail = (props) => {\n  const { src, alt } = props\n  return (\n    <Image src={`./images/${src}`} alt={alt} />\n  )\n}\n\nProductThumbnail.propTypes = {\n  alt: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n}\n\nexport default ProductThumbnail\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { green, red, white } from '../styles/colors'\nimport pxToRem from '../utils/px_to_rem'\n\nimport {\n  exclusiveLabel,\n  saleLabel,\n} from '../constants'\n\nconst StyledBanner = styled.div`\n  color: ${white};\n  display: inline-block;\n  font-size: ${pxToRem(8)};\n  padding: ${pxToRem(2)} ${pxToRem(15)};\n  text-align: center;\n  width: auto;\n`\n\nconst StyledExclusive = styled(StyledBanner)`\n  background: ${green};\n\n`\nconst StyledSale = styled(StyledBanner)`\n  background: ${red};\n`\n\nconst ExclusiveBanner = () => <StyledExclusive>{exclusiveLabel}</StyledExclusive>\nconst SaleBanner = () => <StyledSale>{saleLabel}</StyledSale>\n\nconst Banner = (props) => {\n  const { isExclusive, isSale } = props\n  if (isExclusive) return <ExclusiveBanner />\n  if (isSale) return <SaleBanner />\n  return null\n}\n\nBanner.propTypes = {\n  isSale: PropTypes.bool,\n  isExclusive: PropTypes.bool,\n}\n\nBanner.defaultProps = {\n  isSale: false,\n  isExclusive: false,\n}\n\nexport default Banner\n","export const black = '#000'\nexport const blueLight = '#def1f4'\nexport const grayMedium = '#e5e5e5'\nexport const green = '#009900'\nexport const red = '#cc3333'\nexport const white = '#fff'\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport * as colors from '../styles/colors'\nimport { TypographyHeadingTwo, TypographyHeadingThree } from '../styled/typography'\n\nimport { productImagePlaceholder } from '../constants'\nimport pxToRem from '../utils/px_to_rem'\n\nimport ProductThumbnail from '../product_thumbnail'\nimport Banner from '../banner'\n\n\nconst StyledBannerRow = styled.div`\n  margin-bottom: ${pxToRem(10)};\n  min-height: ${pxToRem(28)};\n`\n\nconst StyledDetailsRow = styled.div`\n  display: grid;\n  grid-template-columns: 60% 40%;\n`\n\nconst StyledTile = styled.article`\n  border: 1px solid ${colors.grayMedium};\n  padding: ${pxToRem(10)};\n  opacity: ${props => (props.visible ? 1 : 0)};\n  transition: all 1s;\n`\n\nconst StyledPrice = styled(TypographyHeadingThree)`\n  text-align: right;\n`\nconst ProductTile = (props) => {\n  // Below hooks are for css transition purposes when the\n  // product visibilty is on/off due to filtering.\n  const [visible, setVisibile] = useState(false)\n  useEffect(() => {\n    setVisibile(true)\n    return () => {\n      setVisibile(false)\n    }\n  }, [])\n\n  const {\n    image,\n    name,\n    price,\n  } = props\n  return (\n    <StyledTile visible={visible}>\n      <ProductThumbnail src={image} alt={name} />\n      <StyledBannerRow>\n        <Banner {...props} />\n      </StyledBannerRow>\n      <StyledDetailsRow>\n        <TypographyHeadingTwo>{name}</TypographyHeadingTwo>\n        <StyledPrice>{price}</StyledPrice>\n      </StyledDetailsRow>\n    </StyledTile>\n  )\n}\n\nProductTile.propTypes = {\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string,\n  image: PropTypes.string,\n}\n\nProductTile.defaultProps = {\n  price: 'TBC',\n  image: productImagePlaceholder,\n}\n\nexport default ProductTile\n","import { keyframes } from 'styled-components'\n\nexport const transitionPt1 = `\n  transition: all 0.1s ease-in-out;\n`\nexport const transitionPt2 = `\n  transition: all 0.2s ease-in-out;\n`\n\nexport const pageLoadContentAppear = keyframes`\n  0% {\n    opacity: 0;\n    top: -20px;\n  }\n\n  100% {\n    opacity: 1;\n    top: 0;\n  }\n`\n\nexport const pageLoadContentDisappear = keyframes`\n  100% {\n    opacity: 0;\n    top: 0;\n  }\n\n  0% {\n    opacity: 1;\n    top: -20px;\n  }\n`","const onlyScreen = 'only screen and'\n\nconst breakpoints = {\n  widescreen_down: 'max-width: 1800px',\n  desktop_down: 'max-width: 1440px',\n  tablet_landscape_down: 'max-width: 1366px',\n  tablet_down: 'max-width: 1048px',\n  phone_down: 'max-width: 768px',\n  small_device_down: 'max-width: 420px',\n}\n\nexport const ScreenWidescreenDown = `${onlyScreen} (${breakpoints.widescreen_down})`\nexport const ScreenDesktopDown = `${onlyScreen} (${breakpoints.desktop_down})`\nexport const ScreenTabletDown = `${onlyScreen} (${breakpoints.tablet_down})`\nexport const ScreenPhoneDown = `${onlyScreen} (${breakpoints.phone_down})`\nexport const ScreenSmallDeviceDown = `${onlyScreen} (${breakpoints.phone_down})`\nexport const ScreenTabletLandscapeDown = `${onlyScreen} (${breakpoints.tablet_landscape_down})`\n","import React from 'react'\nimport axios from 'axios'\n\nimport styled from 'styled-components'\n\nimport Filter from '../filter'\nimport ProductTile from '../product_tile'\n\nimport { blueLight } from '../styles/colors'\n\nimport { TypographyHeadingOne } from '../styled/typography'\n\nimport { pageLoadContentAppear } from '../utils/transitions'\n\nimport {\n  productSizeFilterLabel,\n  productSizes,\n  productApi,\n} from '../constants'\nimport pxToRem from '../utils/px_to_rem'\nimport { ScreenTabletDown, ScreenPhoneDown } from '../utils/media'\n\nconst StyledTopBar = styled.div`\n  background: ${blueLight};\n  display: grid;\n  grid-template-columns: 50% 50%;\n  padding: ${pxToRem(10)};\n  margin-bottom: ${pxToRem(5)};\n`\n\nconst StyledTopBarFilter = styled.div`\n  text-align: right;\n`\n\nconst StyledProductGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  opacity: 0;\n  animation: ${pageLoadContentAppear} 0.5s ease 0.4s forwards;\n  \n  @media ${ScreenTabletDown} {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media ${ScreenPhoneDown} {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`\n\nclass Products extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      filteredValue: '',\n      allProducts: [],\n      filteredProducts: [],\n    }\n  }\n\n\n  // Fetch the api here and initialise product state...\n  componentDidMount() {\n    axios.get(productApi)\n      .then((response) => {\n        const { data } = response\n        return (\n          this.setState({\n            allProducts: data,\n            filteredProducts: data,\n          })\n        )\n      })\n  }\n\n  // Change handler for the size filtering...\n  handleFilterChange = (e) => {\n    const { allProducts } = this.state\n    const { value } = e.target\n\n    const filteredList = allProducts.filter(item => item.size.includes(value))\n\n    // Update products to display filtered sizes...\n    if (filteredList) {\n      this.setState({\n        filteredProducts: filteredList,\n        filteredValue: value,\n      })\n    }\n\n    // Show full list of products when the 'select' label is chosen.\n    // Could also be used for a 'view all' option.\n    if (e.target.value === productSizeFilterLabel) {\n      this.setState({\n        filteredProducts: allProducts,\n        filteredValue: value,\n      })\n    }\n  }\n\n\n  render() {\n    const { filteredProducts, filteredValue } = this.state\n    return (\n      <section>\n        <StyledTopBar>\n          <TypographyHeadingOne>Women's Tops</TypographyHeadingOne>\n          <StyledTopBarFilter>\n            <Filter\n              filters={productSizes}\n              label={productSizeFilterLabel}\n              onChange={this.handleFilterChange}\n              value={filteredValue}\n            />\n          </StyledTopBarFilter>\n        </StyledTopBar>\n        <StyledProductGrid>\n          {\n            filteredProducts.map((product) => {\n              const {\n                isExclusive,\n                isSale,\n                productImage,\n                productName,\n                size,\n                price,\n              } = product\n              console.log(isExclusive, isSale)\n              return (\n                <ProductTile\n                  isExclusive={isExclusive}\n                  isSale={isSale}\n                  key={productName}\n                  image={productImage}\n                  name={productName}\n                  price={price}\n                  size={size}\n                />\n              )\n            })\n          }\n        </StyledProductGrid>\n      </section>\n    )\n  }\n}\n\nexport default Products\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport pxToRem from '../utils/px_to_rem'\nimport { ScreenSmallDeviceDown } from '../utils/media'\n\n// Used mainly inside a <Page /> component to give padding\n// without stretching the height\n\nconst StyledContent = styled.div`\n\n  padding-top: ${pxToRem(60)};\n  width: 100%;\n\n  @media ${ScreenSmallDeviceDown} {\n    padding-top: ${pxToRem(100)};\n  }\n`\n\nconst ContentWrapper = (props) => {\n  const { children } = props\n  return (\n    <StyledContent>\n      {children}\n    </StyledContent>\n  )\n}\n\nContentWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default ContentWrapper\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport styled from 'styled-components'\n\nimport { pageLoadContentAppear } from '../utils/transitions'\nimport pxToRem from '../utils/px_to_rem'\nimport { ScreenTabletLandscapeDown, ScreenSmallDeviceDown } from '../utils/media'\n\nimport ContentWrapper from '../styled/content_wrapper'\n\nconst StyledPage = styled.main`\n  opacity: 0;\n  background: 'transparent';\n  animation: ${pageLoadContentAppear} 0.5s ease forwards;\n  padding: 0 ${pxToRem(60)};\n  position: relative;\n  top: 0;\n  left: 0;\n  right: 0;\n  max-width: 1340px;\n  margin: 0 auto;\n  z-index: 2;\n\n  @media ${ScreenTabletLandscapeDown} {\n    padding: 0 ${pxToRem(60)};\n    position: relative;\n    min-height: auto;\n  }\n\n  @media ${ScreenSmallDeviceDown} {\n    padding: 0 ${pxToRem(20)};\n  }\n`\n\nconst Page = (props) => {\n  const { children } = props\n\n  const [mounting, setMounting] = useState()\n\n  useEffect(() => {\n    setMounting(true)\n  }, [])\n\n  return (\n    <StyledPage isMounting={mounting}>\n      <ContentWrapper>\n        {children}\n      </ContentWrapper>\n    </StyledPage>\n  )\n}\n\nPage.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.any.isRequired,\n}\n\nexport default Page\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react'\n\nimport Products from './components/products'\nimport Page from './components/ui_elements/page'\n\nconst App = () => (\n  <Page>\n    <Products />\n  </Page>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './styles/app.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <App />, document.getElementById('root'),\n)\nserviceWorker.register()\n"],"sourceRoot":""}